# ============================================================================
# docker-compose.yml - Docker Compose Configuration
# ============================================================================
version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: lsuite-db
    environment:
      POSTGRES_DB: lsuite
      POSTGRES_USER: lsuite_user
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - lsuite-network
    restart: unless-stopped

  # Redis
  redis:
    image: redis:7-alpine
    container_name: lsuite-redis
    ports:
      - "6379:6379"
    networks:
      - lsuite-network
    restart: unless-stopped

  # Flask Application
  web:
    build: .
    container_name: lsuite-web
    command: gunicorn -w 4 -b 0.0.0.0:5000 app:app
    environment:
      FLASK_ENV: production
      DATABASE_URL: postgresql://lsuite_user:${DB_PASSWORD}@postgres:5432/lsuite
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
      SECRET_KEY: ${SECRET_KEY}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
    ports:
      - "5000:5000"
    depends_on:
      - postgres
      - redis
    networks:
      - lsuite-network
    volumes:
      - .:/app
    restart: unless-stopped

  # Celery Worker
  celery-worker:
    build: .
    container_name: lsuite-celery-worker
    command: celery -A lsuite.celery worker --loglevel=info
    environment:
      DATABASE_URL: postgresql://lsuite_user:${DB_PASSWORD}@postgres:5432/lsuite
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    depends_on:
      - postgres
      - redis
    networks:
      - lsuite-network
    volumes:
      - .:/app
    restart: unless-stopped

  # Celery Beat (Scheduler)
  celery-beat:
    build: .
    container_name: lsuite-celery-beat
    command: celery -A lsuite.celery beat --loglevel=info
    environment:
      DATABASE_URL: postgresql://lsuite_user:${DB_PASSWORD}@postgres:5432/lsuite
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    depends_on:
      - postgres
      - redis
    networks:
      - lsuite-network
    volumes:
      - .:/app
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: lsuite-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - web
    networks:
      - lsuite-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  lsuite-network:
    driver: bridge
