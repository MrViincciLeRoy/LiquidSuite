# ============================================================================
# reset-database.yml - Complete Database Reset (DESTRUCTIVE)
# ============================================================================
# Drops all tables, recreates them, and seeds default data
# WARNING: This will DELETE ALL DATA - use with extreme caution!
# ============================================================================

name: Reset Database (Drop + Init)

on:
  workflow_dispatch:
    inputs:
      confirmation:
        description: 'Type "RESET DATABASE" to confirm'
        required: true
        type: string
      environment:
        description: 'Target environment'
        required: true
        default: 'development'
        type: choice
        options:
          - development
          - staging
          - production
      seed_data:
        description: 'Seed default categories after reset?'
        required: true
        default: true
        type: boolean

jobs:
  reset-database:
    name: Reset Database
    runs-on: ubuntu-latest
    
    # Add environment protection
    environment: ${{ github.event.inputs.environment }}
    
    steps:
      - name: Validate Confirmation
        run: |
          if [ "${{ github.event.inputs.confirmation }}" != "RESET DATABASE" ]; then
            echo "‚ùå ERROR: Confirmation text does not match!"
            echo "You must type 'RESET DATABASE' exactly to proceed."
            exit 1
          fi
          echo "‚úÖ Confirmation validated"
      
      - name: Security Check - Prevent Production Reset
        if: github.event.inputs.environment == 'production'
        run: |
          echo "‚ö†Ô∏è  =========================================="
          echo "‚ö†Ô∏è  CRITICAL WARNING"
          echo "‚ö†Ô∏è  =========================================="
          echo ""
          echo "You are about to RESET the PRODUCTION database!"
          echo "This will DELETE ALL PRODUCTION DATA!"
          echo ""
          echo "Are you absolutely sure this is intended?"
          echo "Consider using 'development' or 'staging' instead."
          echo ""
          echo "Proceeding in 10 seconds..."
          sleep 10
      
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
      
      - name: Install dependencies
        working-directory: LiquidSuite
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Pre-Reset Database Check
        working-directory: LiquidSuite
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          SQLALCHEMY_DATABASE_URI: ${{ secrets.DATABASE_URL }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          FLASK_ENV: ${{ github.event.inputs.environment }}
        run: |
          echo "üìä Current Database Status"
          echo "=========================="
          echo ""
          python scripts/init_db.py check || echo "‚ö†Ô∏è  Database may be empty or uninitialized"
          echo ""
      
      - name: Execute Database Reset
        working-directory: LiquidSuite
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          SQLALCHEMY_DATABASE_URI: ${{ secrets.DATABASE_URL }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          FLASK_ENV: ${{ github.event.inputs.environment }}
        run: |
          echo "üîÑ Step 1: Dropping all tables with CASCADE..."
          echo "=============================================="
          echo ""
          python scripts/drop_db_cascade.py cascade << 'CONFIRM'
          DELETE ALL DATA
          CONFIRM
          echo ""
          
          echo "üìä Step 2: Creating fresh tables..."
          echo "===================================="
          echo ""
          python scripts/init_db.py init
          echo ""
          echo "‚úÖ Database reset complete!"
      
      - name: Seed Default Categories
        if: github.event.inputs.seed_data == 'true'
        working-directory: LiquidSuite
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          SQLALCHEMY_DATABASE_URI: ${{ secrets.DATABASE_URL }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          FLASK_ENV: ${{ github.event.inputs.environment }}
        run: |
          echo "üå± Seeding default categories..."
          echo "================================="
          echo ""
          python scripts/seed_categories.py seed
          echo ""
      
      - name: Verify Reset
        working-directory: LiquidSuite
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          SQLALCHEMY_DATABASE_URI: ${{ secrets.DATABASE_URL }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          FLASK_ENV: ${{ github.event.inputs.environment }}
        run: |
          echo "üîç Verifying database reset..."
          echo "=============================="
          echo ""
          python scripts/init_db.py check
          echo ""
      
      - name: Final Summary
        if: success()
        run: |
          echo ""
          echo "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"
          echo "‚úÖ DATABASE RESET COMPLETE"
          echo "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"
          echo ""
          echo "Environment: ${{ github.event.inputs.environment }}"
          echo "Timestamp: $(date -u +"%Y-%m-%d %H:%M:%S UTC")"
          echo ""
          echo "Completed steps:"
          echo "  ‚úÖ Dropped all existing tables"
          echo "  ‚úÖ Created fresh database schema"
          
          if [ "${{ github.event.inputs.seed_data }}" = "true" ]; then
            echo "  ‚úÖ Seeded default categories"
          else
            echo "  ‚è≠Ô∏è  Skipped category seeding"
          fi
          
          echo "  ‚úÖ Verified database structure"
          echo ""
          echo "Database is now ready to use!"
          echo ""
          
          if [ "${{ github.event.inputs.environment }}" = "production" ]; then
            echo "‚ö†Ô∏è  PRODUCTION database has been reset!"
            echo "All previous data has been permanently deleted."
          fi
      
      - name: Notify on Failure
        if: failure()
        run: |
          echo ""
          echo "‚ùå DATABASE RESET FAILED"
          echo "========================"
          echo ""
          echo "The reset operation encountered an error."
          echo "Database state may be inconsistent!"
          echo ""
          echo "Recommended actions:"
          echo "  1. Review the error logs above"
          echo "  2. Check database connectivity"
          echo "  3. Verify database credentials"
          echo "  4. Consider manual intervention"
          echo ""
          
          if [ "${{ github.event.inputs.environment }}" = "production" ]; then
            echo "‚ö†Ô∏è  CRITICAL: Production database may be in inconsistent state!"
            echo "Please investigate immediately."
          fi
